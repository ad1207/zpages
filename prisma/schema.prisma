generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model tag {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar(50)
  slug       String?   @db.VarChar(300)
  company_id BigInt?
  created_by BigInt?
  createdAt  DateTime? @default(now()) @db.Timestamp(6)
  updated_by BigInt?
  updatedAt  DateTime? @db.Timestamp(6)

  @@unique([name, company_id], name: "tag_unique")
}

model blog {
  id              BigInt    @id @default(autoincrement())
  blog_id         String    @unique @db.VarChar(20)
  title           String?   @db.VarChar(80)
  description     String?   @db.VarChar(200)
  slug            String?   @db.VarChar(300)
  excerpt         String?   @db.VarChar(350)
  layout          String    @db.VarChar(50)
  category        Int[]
  tag             Int[]
  company_id      BigInt?
  repo_id         BigInt
  author          String?   @db.VarChar(50)
  is_delete       String?   @db.VarChar(5)
  blog_date       DateTime? @db.Timestamp(6)
  status          String?   @db.VarChar(1)
  published       String?   @db.VarChar(1)
  published_on    DateTime? @db.Timestamp(6)
  created_by      BigInt?
  createdAt       DateTime  @default(now()) @db.Timestamp(6)
  updated_by      BigInt?
  updatedAt       DateTime? @db.Timestamp(6)
  thumbnail       String?   @db.VarChar(350)
  publish_content Json?
  content         Json?
  is_author       Boolean?
  is_publish_date Boolean?
  word_count      String?   @db.VarChar(10)
  read_time       String?   @db.VarChar(15)
  view_count      Int?
  is_feature      Boolean?
  hero_image      String?   @db.VarChar(500)
  repo            repo      @relation(fields: [repo_id], references: [id])
}

model category {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar(50)
  slug       String?   @db.VarChar(300)
  company_id BigInt?
  created_by BigInt?
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updated_by BigInt?
  updatedAt  DateTime? @db.Timestamp(6)

  @@unique([name, company_id], name: "category_unique")
}

model company {
  id               BigInt    @id @default(autoincrement())
  company_id       String?   @unique @db.VarChar(20)
  name             String?   @db.VarChar(60)
  status           String?   @db.VarChar(10)
  logo             String?   @db.VarChar(500)
  about            String?   @db.VarChar(500)
  website_url      String?   @db.VarChar(100)
  is_delete        String?   @db.VarChar(5)
  created_by       BigInt?
  updated_by       BigInt?
  createdAt        DateTime? @db.Timestamp(6)
  updatedAt        DateTime? @db.Timestamp(6)
  blog_home_format String?   @db.VarChar(50)
  sub_domain       String?   @unique(map: "sub_domain_unique") @db.VarChar(100)
  repo             repo[]
}

model role {
  id          BigInt  @id
  name        String? @db.VarChar(50)
  description String? @db.VarChar(50)

  user_role user_role[]
}

model user_role {
  id      BigInt @default(autoincrement())
  role_id BigInt
  user_id BigInt
  role    role   @relation(fields: [role_id], references: [id])
  users   users  @relation(fields: [user_id], references: [id])

  @@id([role_id, user_id])
}

model users {
  id                BigInt      @id @default(autoincrement())
  first_name        String      @db.VarChar(100)
  email             String      @unique @db.VarChar(320)
  last_login_date   DateTime?   @db.Timestamp(6)
  profile_pic       String?     @db.VarChar(100)
  reset_token       String?     @db.VarChar(45)
  salt              String?     @db.VarChar(255)
  hashed_password   String?     @db.VarChar(255)
  resetpasswordlink String?     @db.VarChar(500)
  created_by        Int?
  created_date      DateTime    @default(now()) @db.Timestamp(6)
  modified_by       Int?
  modified_date     DateTime?   @db.Timestamp(6)
  last_name         String?     @db.VarChar(100)
  phone             String?     @db.VarChar(20)
  status            String?     @db.VarChar(10)
  profile_url       String?     @db.VarChar(300)
  company_id        BigInt?
  source            String?     @db.VarChar(10)
  socialmedia_id    String?     @db.VarChar(100)
  access_rights     String?     @db.VarChar(5)
  user_id           String?     @db.VarChar(20)
  user_role         user_role[]
}

model repo {
  id         BigInt      @id @default(autoincrement())
  repo_id    String      @unique @db.VarChar(20)
  repo_name  String      @db.VarChar(150)
  company_id BigInt
  status     String?     @db.VarChar(10)
  is_delete  String?     @db.VarChar(5)
  repo_type  String?     @db.VarChar(10)
  created_by BigInt?
  updated_by BigInt?
  createdAt  DateTime?   @db.Timestamp(6)
  updatedAt  DateTime?   @db.Timestamp(6)
  blog       blog[]
  lead_page  lead_page[]
  company    company     @relation(fields: [company_id], references: [id])
}

model template {
  id                  BigInt                @id @default(autoincrement())
  template_name       String                @unique @db.VarChar(60)
  status              String?               @db.VarChar(10)
  template_id         String                @unique @db.VarChar(20)
  is_delete           String?               @db.VarChar(5)
  blocks              Json?
  template_type       String?               @db.VarChar(5)
  created_by          BigInt?
  updated_by          BigInt?
  createdAt           DateTime?             @db.Timestamp(6)
  updatedAt           DateTime?             @db.Timestamp(6)
  thumbnail           String?               @db.VarChar(500)
  payment_type        String?               @db.VarChar(100)
  amount              Decimal?              @default(0.0) @db.Decimal
  template_collection template_collection[]
}

model lead_page {
  id             BigInt    @id @default(autoincrement())
  lead_page_id   String    @unique @db.VarChar(20)
  lead_page_name String?   @db.VarChar(150)
  template_id    BigInt
  status         String?   @db.VarChar(10)
  blocks         Json?
  is_delete      String?   @db.VarChar(5)
  repo_id        BigInt
  template_type  String    @db.VarChar(5)
  blocks_clone   Json?
  company_id     BigInt?
  created_by     BigInt?
  updated_by     BigInt?
  createdAt      DateTime? @db.Timestamp(6)
  updatedAt      DateTime? @db.Timestamp(6)
  thumbnail      String?   @db.VarChar(350)
  published      String?   @db.VarChar(5)
  slug           String?   @db.VarChar(350)
  view_count     Int?
  repo           repo      @relation(fields: [repo_id], references: [id])
}

model collection {
  id                  BigInt                @id @default(autoincrement())
  name                String                @db.VarChar(100)
  description         String                @db.VarChar(100)
  status              String?               @db.VarChar(10)
  is_delete           String?               @db.VarChar(5)
  created_by          BigInt?
  updated_by          BigInt?
  createdAt           DateTime?             @db.Timestamp(6)
  updatedAt           DateTime?             @db.Timestamp(6)
  template_collection template_collection[]
}

model template_collection {
  collection_id BigInt
  template_id   BigInt
  collection    collection @relation(fields: [collection_id], references: [id])
  template      template   @relation(fields: [template_id], references: [id])

  @@id([collection_id, template_id])
}

model lead_funnels {
  id           BigInt    @id(map: "subscriptions_pkey") @default(autoincrement())
  email        String?   @db.VarChar(150)
  company_id   BigInt?
  repo_id      BigInt?
  lead_id      BigInt?
  created_date DateTime? @db.Timestamp(6)
  first_name   String?   @db.VarChar(150)
  last_name    String?   @db.VarChar(150)
  mobile_no    String?   @db.VarChar(15)

  @@unique([email, lead_id], name: "lead_funnel_unique", map: "lead_funnel_unique")
}

model cta_suggestion {
  id           BigInt    @id @default(autoincrement())
  cta_key      String?   @db.VarChar(100)
  cta_label    String?   @db.VarChar(300)
  created_date DateTime? @db.Timestamp(6)
}
