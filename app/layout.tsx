'use client'
import './globals.css'
import { ThemeProvider } from '@mui/material'
import { useEffect, useState } from 'react'
import theme from '../theme'
import { config } from '@fortawesome/fontawesome-svg-core'
import axios from 'axios'
import Router from 'next/router'
import {IntlProvider} from 'react-intl'
import { SWRConfig } from 'swr'
import NProgress from 'nprogress'
import Layout from '../components/Layout'
import messages from '../i18n'
import {state} from '../utils/state'
import {Hydrate, QueryClient, QueryClientProvider} from 'react-query';

import { useRouter, usePathname } from 'next/navigation'
// config.autoAddCss = false

// Router.events.on('routeChangeStart', () => NProgress.start());

// Router.events.on('routeChangeComplete', () => NProgress.done());
// Router.events.on('routeChangeError', () => NProgress.done());





export const metadata = {
  title: '# Webb Business Landing pages / Blogs / Banners',
  description: 'Generated by create next app',
}

export default function RootLayout({ children }) {
  const locale = 'en';
  const router = useRouter();
  const pathname = usePathname();
  const [queryClient] = useState(
    ()=>
        new QueryClient({
          defaultOptions: {
            queries:{
              refetchOnWindowFocus: false,
            }
          }
        })
  )

  // useEffect(() => {
	// 	// Remove the server-side injected CSS.
	// 	const jssStyles = document.querySelector('#jss-server-side');
	// 	if (jssStyles) {
	// 		jssStyles.parentElement.removeChild(jssStyles);
	// 	}

	// 	//console.log('rrr ' + localStorage.getItem('user'));
	// 	const getLoggedUser = async () => {
	// 		let user = await axios.get(`/api/auth/user`);

	// 		state.islogged = true;
	// 		//	console.log('check user data in _app.tsx:: ' + JSON.stringify(user));
	// 		state.user = user.data;
	// 	};

	// 	if (localStorage.getItem('islogged')) {
	// 		getLoggedUser();
	// 		if (pathname === '/') {
	// 			router.push('/dashboard');
	// 		}
	// 	}

		// else if (localStorage.getItem('islogged') && router1.pathname === '/') {
		// 	getLoggedUser();
		// 	Router.push('/dashboard');
		// }
	// eslint-disable-next-line react-hooks/exhaustive-deps
	// }, [pathname]);

  return (
    <html lang="en">
      <body>
        <IntlProvider locale={locale} messages={messages[locale]}>
          <SWRConfig
            value={{
              refreshInterval: 0,
              errorRetryCount: 0,
              shouldRetryOnError: false,
              revalidateOnMount: false,
              revalidateOnFocus: false,
              revalidateOnReconnect: false,
              compare: (a, b) => a===b,
              fetcher: (url: string) => {
                axios(url).then((res) => res.data);
              }
            }}
          >
            <QueryClientProvider client={queryClient}>
              <Hydrate state={state}>
                <Layout>
                  {children}
                </Layout>
              </Hydrate>
            </QueryClientProvider>
          </SWRConfig>
        </IntlProvider>
      </body>
    </html>
  )
}
